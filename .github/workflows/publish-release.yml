name: üè∑Ô∏è Publish NPM Latest

on:
  workflow_dispatch:
    inputs:
      dryrun:
        type: boolean
        description: Dry-Run

permissions:
  contents: write
  id-token: write

jobs:
  deploy-npm-latest:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Retrieve current Date Time in EST
        shell: bash
        run: echo "START_TIME=$(TZ=":America/New_York" date -R|sed 's/.....$//')" >> $GITHUB_ENV

      - name: Current datetime - ${{ env.START_TIME }}
        run: echo ${{ env.START_TIME }}

      - name: Clone repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - if: ${{ github.event.pull_request.merged != true && contains('["ghiscoding"]', github.actor) != true }}
        name: Ensure current actor is allowed to run the workflow
        run: |
          echo "Error: Your GitHub username (${{ github.actor }}) is not on the allowed list of admins for this workflow"
          exit 1

      - name: Set NodeJS
        uses: actions/setup-node@v4
        with:
          registry-url: 'https://registry.npmjs.org/'
          node-version: 20

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        run: echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Run pnpm install dependencies
        run: pnpm install

      - name: Build Library
        run: pnpm build

      - name: üß™ Dry-Run - GitHub Release
        if: ${{ inputs.dryrun == true }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_CONFIG_PROVENANCE: true
        run: |
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"
          pnpm whoami
          cd packages/aurelia-slickgrid
          pnpm exec release-it --ci --dry-run

      - name: OTP
        if: ${{ inputs.dryrun != true }}
        uses: step-security/wait-for-secrets@v1
        id: wait-for-secrets
        with:
          secrets: |
            OTP:
              name: 'OTP to publish package'
              description: 'OTP from authenticator app'

      - name: GitHub Release üè∑Ô∏è / NPM Publish üì¶
        if: ${{ inputs.dryrun != true }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_CONFIG_PROVENANCE: true
        run: |
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"
          pnpm whoami
          cd packages/aurelia-slickgrid
          pnpm exec release-it --ci --npm.otp=${{ steps.wait-for-secrets.outputs.OTP }}

      - name: Website Dev Build (served for Cypress)
        if: ${{ inputs.dryrun != true }}
        run: pnpm build:demo

        # deploy (re-publish) GitHub demo page with a Prod build but only when merging to "master" branch
        # and the commit message contains the text "chore: release"
      - name: Deploy to gh-pages
        if: ${{ inputs.dryrun != true }}
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./packages/demo/website
