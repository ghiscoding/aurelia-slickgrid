"use strict";(self.webpackChunkau_slickgrid_demo=self.webpackChunkau_slickgrid_demo||[]).push([[7525],{7525:(i,e,t)=>{t.r(e),t.d(e,{Example1:()=>f});var a={};t.r(a),t.d(a,{bindables:()=>c,default:()=>o,dependencies:()=>l,name:()=>r,register:()=>h,template:()=>s});var n=t(5959),d=t(7414);const r="example1",s='<h2>\n  ${title}\n  <span class="float-end">\n    <a style="font-size: 18px" target="_blank"\n      href="https://github.com/ghiscoding/aurelia-slickgrid/blob/master/packages/demo/src/examples/slickgrid/example1.ts">\n      <span class="mdi mdi-link-variant"></span> code\n    </a>\n  </span>\n</h2>\n<div class="subtitle" innerhtml.bind="subTitle"></div>\n\n<h3>\n  <div class="column">\n    <span class="mr-3">Grid 1</span>\n    <button class="btn btn-outline-secondary btn-sm btn-icon" click.trigger="toggleDarkModeGrid1()" data-test="toggle-dark-mode">\n      <i class="mdi mdi-theme-light-dark"></i>\n      <span>Toggle Dark Mode</span>\n    </button>\n  </div>\n</h3>\n\n<div class="grid-container1">\n  <aurelia-slickgrid grid-id="grid1-1" column-definitions.bind="columnDefinitions1" grid-options.bind="gridOptions1"\n    dataset.bind="dataset1"\n    on-aurelia-grid-created.trigger="aureliaGridReady($event.detail)">\n  </aurelia-slickgrid>\n</div>\n\n<hr />\n\n<h3>Grid 2 <small>(with local Pagination)</small></h3>\n<aurelia-slickgrid grid-id="grid1-2"\n  column-definitions.bind="columnDefinitions2"\n  grid-options.bind="gridOptions2"\n  dataset.bind="dataset2">\n</aurelia-slickgrid>\n',o=s,l=[],c={};let m;function h(i){m||(m=d.K9.define({name:r,template:s,dependencies:l,bindables:c})),i.register(m)}var u=t(971);function g(i){const e=parseInt(i,10);return e<10?`0${e}`:e}t(1376);let f=(()=>{let i,e,t=[(0,d.EM)(a)],r=[];return class{static{e=this}static{const a="function"==typeof Symbol&&Symbol.metadata?Object.create(null):void 0;(0,n.G4)(null,i={value:e},t,{kind:"class",name:e.name,metadata:a},null,r),e=i.value,a&&Object.defineProperty(e,Symbol.metadata,{enumerable:!0,configurable:!0,writable:!0,value:a}),(0,n.zF)(e,r)}_darkModeGrid1=!1;title="Example 1: Basic Grids";subTitle="Simple Grids with Fixed Sizes (800 x 225)";aureliaGrid1;gridOptions1;gridOptions2;columnDefinitions1=[];columnDefinitions2=[];dataset1=[];dataset2=[];constructor(){this.defineGrids()}attached(){this.dataset1=this.mockData(995),this.dataset2=this.mockData(995)}aureliaGridReady(i){this.aureliaGrid1=i}isBrowserDarkModeEnabled(){return window.matchMedia?.("(prefers-color-scheme: dark)").matches??!1}detaching(){document.querySelector(".panel-wm-content").classList.remove("dark-mode"),document.querySelector("#demo-container").dataset.bsTheme="light"}defineGrids(){this.columnDefinitions1=[{id:"title",name:"Title",field:"title",sortable:!0,minWidth:100},{id:"duration",name:"Duration (days)",field:"duration",sortable:!0,minWidth:100},{id:"%",name:"% Complete",field:"percentComplete",sortable:!0,minWidth:100},{id:"start",name:"Start",field:"start",formatter:u._tQ.dateIso},{id:"finish",name:"Finish",field:"finish",formatter:u._tQ.dateIso},{id:"effort-driven",name:"Effort Driven",field:"effortDriven",sortable:!0,minWidth:100}],this._darkModeGrid1=this.isBrowserDarkModeEnabled(),this.gridOptions1={darkMode:this._darkModeGrid1,gridHeight:225,gridWidth:800,enableAutoResize:!1,enableSorting:!0},this.columnDefinitions2=this.columnDefinitions1,this.gridOptions2={...this.gridOptions1,darkMode:!1,enablePagination:!0,pagination:{pageSizes:[5,10,20,25,50],pageSize:5}}}mockData(i){const e=[];for(let t=0;t<i;t++){const i=2e3+Math.floor(10*Math.random()),a=Math.floor(11*Math.random()),n=Math.floor(29*Math.random()),d=Math.round(100*Math.random());e[t]={id:t,title:"Task "+t,duration:Math.round(100*Math.random())+"",percentComplete:d,start:`${g(i)}-${g(a+1)}-${g(n)}`,finish:`${g(i+1)}-${g(a+1)}-${g(n)}`,effortDriven:t%5==0}}return e}toggleDarkModeGrid1(){this._darkModeGrid1=!this._darkModeGrid1,this._darkModeGrid1?document.querySelector(".grid-container1")?.classList.add("dark-mode"):document.querySelector(".grid-container1")?.classList.remove("dark-mode"),this.aureliaGrid1.slickGrid?.setOptions({darkMode:this._darkModeGrid1})}},e})()}}]);