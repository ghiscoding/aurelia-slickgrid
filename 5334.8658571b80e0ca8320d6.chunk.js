"use strict";(self.webpackChunkau_slickgrid_demo=self.webpackChunkau_slickgrid_demo||[]).push([[5334],{6718:(e,t,n)=>{n.d(t,{A:()=>r});var a=n(3267),i=n.n(a),s=n(3484),l=n.n(s)()(i());l.push([e.id,"",""]);const r=l},4280:(e,t,n)=>{var a=n(3267),i=n.n(a),s=n(3484);n.n(s)()(i()).push([e.id,"",""])},5334:(e,t,n)=>{n.r(t),n.d(t,{Example31:()=>z});var a={};n.r(a),n.d(a,{bindables:()=>c,default:()=>o,dependencies:()=>d,name:()=>l,register:()=>b,template:()=>r});var i=n(5959),s=n(7414);n(4280);const l="example31",r='<h2>\n  ${title}\n  <span class="float-end">\n    <a style="font-size: 18px"\n        target="_blank"\n        href="https://github.com/ghiscoding/aurelia-slickgrid/blob/master/packages/demo/src/examples/slickgrid/example31.ts">\n      <span class="mdi mdi-link-variant"></span> code\n    </a>\n  </span>\n</h2>\n<div class="subtitle" innerhtml.bind="subTitle"></div>\n\n<div class="row">\n  <div class="col-md-12" aria-label="Basic Editing Commands">\n    <button class="btn btn-outline-secondary btn-sm btn-icon" data-test="clear-filters-sorting"\n            click.trigger="clearAllFiltersAndSorts()" title="Clear all Filters & Sorts">\n      <span class="mdi mdi-close"></span>\n      <span>Clear all Filter & Sorts</span>\n    </button>\n    <button class="btn btn-outline-secondary btn-sm btn-icon" data-test="set-dynamic-filter"\n            click.trigger="setFiltersDynamically()">\n      Set Filters Dynamically\n    </button>\n    <button class="btn btn-outline-secondary btn-sm btn-icon" data-test="set-dynamic-sorting"\n            click.trigger="setSortingDynamically()">\n      Set Sorting Dynamically\n    </button>\n    <button class="btn btn-outline-secondary btn-sm btn-icon" style="margin-left: 10px" data-test="add-gender-button"\n            click.trigger="addOtherGender()" disabled.bind="isOtherGenderAdded">\n      Add Other Gender via RxJS\n    </button>\n  </div>\n</div>\n\n<br />\n\n<div>\n  <span>\n    <label>Programmatically go to first/last page:</label>\n    <div class="btn-group" role="group">\n      <button class="btn btn-outline-secondary btn-xs btn-icon px-2" data-test="goto-first-page" click.trigger="goToFirstPage()">\n        <i class="mdi mdi-page-first"></i>\n      </button>\n      <button class="btn btn-outline-secondary btn-xs btn-icon px-2" data-test="goto-last-page" click.trigger="goToLastPage()">\n        <i class="mdi mdi-page-last icon"></i>\n      </button>\n    </div>\n  </span>\n\n  <span style="margin-left: 10px">\n    <label>OData Version: </label>\n    <span data-test="radioVersion">\n      <label class="radio-inline control-label" for="radio2">\n        <input type="radio" name="inlineRadioOptions" data-test="version2" id="radio2" checked value.bind="2"\n                click.trigger="setOdataVersion(2)"> 2\n      </label>\n      <label class="radio-inline control-label" for="radio4">\n        <input type="radio" name="inlineRadioOptions" data-test="version4" id="radio4" value.bind="4"\n                click.trigger="setOdataVersion(4)"> 4\n      </label>\n    </span>\n    <label class="checkbox-inline control-label" for="enableCount" style="margin-left: 20px">\n      <input type="checkbox" id="enableCount" data-test="enable-count" checked.bind="isCountEnabled"\n              click.trigger="changeCountEnableFlag()">\n      <span style="font-weight: bold">Enable Count</span> (add to OData query)\n    </label>\n    <label class="checkbox-inline control-label" for="enableSelect" style="margin-left: 20px">\n      <input type="checkbox" id="enableSelect" data-test="enable-select" checked.bind="isSelectEnabled"\n              click.trigger="changeEnableSelectFlag()">\n      <span style="font-weight: bold">Enable Select</span> (add to OData query)\n    </label>\n    <label class="checkbox-inline control-label" for="enableExpand" style="margin-left: 20px">\n      <input type="checkbox" id="enableExpand" data-test="enable-expand" checked.bind="isExpandEnabled"\n              click.trigger="changeEnableExpandFlag()">\n      <span style="font-weight: bold">Enable Expand</span> (add to OData query)\n    </label>\n  </span>\n</div>\n\n<div class="row" style="margin-top: 5px">\n  <div class="col-md-10">\n    <div class="alert alert-info" data-test="alert-odata-query">\n      <strong>OData Query:</strong> <span data-test="odata-query-result">${odataQuery}</span>\n    </div>\n  </div>\n  <div class.bind="status.class" role="alert" data-test="status">\n    <strong>Status: </strong> ${status.text}\n  </div>\n</div>\n\n<aurelia-slickgrid grid-id="grid31"\n                    column-definitions.bind="columnDefinitions"\n                    grid-options.bind="gridOptions"\n                    dataset.bind="dataset"\n                    pagination-options.bind="paginationOptions"\n                    on-aurelia-grid-created.trigger="aureliaGridReady($event.detail)"\n                    on-grid-state-changed.trigger="gridStateChanged($event.detail)">\n</aurelia-slickgrid>\n',o=r,d=[],c={};let u;function b(e){u||(u=s.K9.define({name:l,template:r,dependencies:d,bindables:c})),e.register(u)}var p=n(2623),g=n(4833),h=n(7694),m=n(6824),y=n(1941),f=n(3098),S=n(971),C=n(5388),v=n.n(C),E=n(1125),x=n.n(E),k=n(5687),O=n.n(k),A=n(8644),w=n.n(A),F=n(9552),G=n.n(F),D=n(3325),P=n.n(D),R=n(6718),T={};T.styleTagTransform=P(),T.setAttributes=w(),T.insert=O().bind(null,"head"),T.domAPI=x(),T.insertStyleElement=G(),v()(R.A,T),R.A&&R.A.locals&&R.A.locals,n(1376);let z=(()=>{let e,t,n=[(0,s.EM)(a)],l=[];return class{static{t=this}static{const a="function"==typeof Symbol&&Symbol.metadata?Object.create(null):void 0;(0,i.G4)(null,e={value:t},n,{kind:"class",name:t.name,metadata:a},null,l),t=e.value,a&&Object.defineProperty(t,Symbol.metadata,{enumerable:!0,configurable:!0,writable:!0,value:a}),(0,i.zF)(t,l)}http;title="Example 31: Grid with OData Backend Service using RxJS Observables";subTitle="Optionally use RxJS instead of Promises, you would typically use this with a Backend Service API (OData/GraphQL)";aureliaGrid;columnDefinitions=[];gridOptions;dataset=[];metrics;paginationOptions;isCountEnabled=!0;isSelectEnabled=!1;isExpandEnabled=!1;odataVersion=2;odataQuery="";processing=!1;errorStatus="";isPageErrorTest=!1;status={text:"",class:""};isOtherGenderAdded=!1;genderCollection=[{value:"male",label:"male"},{value:"female",label:"female"}];constructor(e=(0,m.hd)((0,m.pn)(h.xl))){this.http=e,this.initializeGrid()}aureliaGridReady(e){this.aureliaGrid=e}initializeGrid(){this.columnDefinitions=[{id:"name",name:"Name",field:"name",sortable:!0,type:S.PUO.string,filterable:!0,filter:{model:S.CuW.compoundInput}},{id:"gender",name:"Gender",field:"gender",filterable:!0,editor:{model:S.R8o.singleSelect,collectionAsync:(0,y.of)(this.genderCollection)},filter:{model:S.CuW.singleSelect,collectionAsync:(0,y.of)(this.genderCollection),collectionOptions:{addBlankEntry:!0}}},{id:"company",name:"Company",field:"company",filterable:!0,sortable:!0},{id:"category_name",name:"Category",field:"category/name",filterable:!0,sortable:!0}],this.gridOptions={enableAutoResize:!0,autoResize:{container:"#demo-container",rightPadding:10},checkboxSelector:{hideInFilterHeaderRow:!1,hideInColumnTitleRow:!0},editable:!0,autoEdit:!0,autoCommitEdit:!0,rowHeight:33,headerRowHeight:35,enableCellNavigation:!0,enableFiltering:!0,enableCheckboxSelector:!0,enableRowSelection:!0,enablePagination:!0,pagination:{pageSizes:[10,20,50,100,500],pageSize:20},presets:{filters:[{columnId:"gender",searchTerms:["male"],operator:S.huT.equal}],sorters:[{columnId:"name",direction:"asc"}],pagination:{pageNumber:2,pageSize:20}},backendServiceApi:{service:new p.r,options:{enableCount:this.isCountEnabled,enableSelect:this.isSelectEnabled,enableExpand:this.isExpandEnabled,version:this.odataVersion},preProcess:()=>this.displaySpinner(!0),process:e=>this.getCustomerApiCall(e),postProcess:e=>{this.metrics=e.metrics,this.displaySpinner(!1),this.getCustomerCallback(e)}},externalResources:[new g.o]}}addOtherGender(){const e={value:"other",label:"other"},t=this.columnDefinitions.find((e=>"gender"===e.id));if(t){let n=t.editor.collection;const a=t.filter.collectionAsync;Array.isArray(n)&&(t.editor.collection=[...this.genderCollection,e],n=t.editor.collection,a?.next&&(a.next(n),a.complete()))}this.isOtherGenderAdded=!0}displaySpinner(e){this.processing=e,this.status=e?{text:"loading...",class:"col-md-2 alert alert-warning"}:{text:"finished!!",class:"col-md-2 alert alert-success"}}getCustomerCallback(e){let t=e.totalRecordCount;this.isCountEnabled&&(t=4===this.odataVersion?e["@odata.count"]:e.d.__count),this.metrics&&(this.metrics.totalItemCount=t),this.paginationOptions={...this.gridOptions.pagination,totalItems:t},this.dataset=4===this.odataVersion?e.value:e.d.results,this.odataQuery=e.query}getCustomerApiCall(e){return this.getCustomerDataApiMock(e)}getCustomerDataApiMock(e){return new f.c((t=>{const n=e.toLowerCase().split("&");let a,i=0,s="",l=100;const r={};for(const e of n)if(e.includes("$top=")&&(a=+e.substring(5)),e.includes("$skip=")&&(i=+e.substring(6)),e.includes("$orderby=")&&(s=e.substring(9)),e.includes("$filter=")){const t=e.substring(8).replace("%20"," ");if(t.includes("contains")){const e=t.match(/contains\(([a-zA-Z/]+),\s?'(.*?)'/),n=e[1].trim();r[n]={type:"substring",term:e[2].trim()}}if(t.includes("substringof")){const e=t.match(/substringof\('(.*?)',\s([a-zA-Z/]+)/),n=e[2].trim();r[n]={type:"substring",term:e[1].trim()}}if(t.includes("eq")){const e=t.match(/([a-zA-Z ]*) eq '(.*?)'/);if(Array.isArray(e)){const t=e[1].trim();r[t]={type:"equal",term:e[2].trim()}}}if(t.includes("startswith")){const e=t.match(/startswith\(([a-zA-Z ]*),\s?'(.*?)'/),n=e[1].trim();r[n]={type:"starts",term:e[2].trim()}}if(t.includes("endswith")){const e=t.match(/endswith\(([a-zA-Z ]*),\s?'(.*?)'/),n=e[1].trim();r[n]={type:"ends",term:e[2].trim()}}}this.http.fetch("assets/data/customers_100.json").then((e=>e.json())).then((n=>{if(s?.length>0){const e=s.split(",");for(const t of e){const e=t.split(" "),a=e[0];let i=e=>e;for(const e of a.split("/")){const t=i;i=n=>t(n)[e]}switch((e[1]??"asc").toLocaleLowerCase()){case"asc":n=n.sort(((e,t)=>i(e).localeCompare(i(t))));break;case"desc":n=n.sort(((e,t)=>i(t).localeCompare(i(e))))}}}let o=i,d=n;if(r){for(const e in r)r.hasOwnProperty(e)&&(d=d.filter((t=>{const n=r[e].type,a=r[e].term;let i,s=e;if(e&&-1!==e.indexOf(" ")){const t=e.split(" ");s=t[t.length-1]}let l=t;for(const e of s.split("/"))i=l[e],l=i;if(i)switch(n){case"equal":return i.toLowerCase()===a;case"ends":return i.toLowerCase().endsWith(a);case"starts":return i.toLowerCase().startsWith(a);case"substring":return i.toLowerCase().includes(a)}})));l=d.length}o>d.length&&(e=e.replace(`$skip=${o}`,""),o=0);const c=d.slice(o,o+a);window.setTimeout((()=>{const n={query:e};this.isCountEnabled||(n.totalRecordCount=l),4===this.odataVersion?(n.value=c,this.isCountEnabled&&(n["@odata.count"]=l)):(n.d={results:c},this.isCountEnabled&&(n.d.__count=l)),t.next(n),t.complete()}),150)}))}))}clearAllFiltersAndSorts(){this.aureliaGrid?.gridService.clearAllFiltersAndSorts()}goToFirstPage(){this.aureliaGrid?.paginationService?.goToFirstPage()}goToLastPage(){this.aureliaGrid?.paginationService?.goToLastPage()}gridStateChanged(e){console.log("Client sample, Grid State changed:: ",e.change)}setFiltersDynamically(){this.aureliaGrid?.filterService.updateFilters([{columnId:"name",searchTerms:["A"],operator:"a*"}])}setSortingDynamically(){this.aureliaGrid?.sortService.updateSorting([{columnId:"name",direction:"DESC"}])}handleOnBeforeSort(e){return!0}handleOnBeforeSearchChange(e){return!0}handleOnBeforePaginationChange(e){return!0}changeCountEnableFlag(){return this.displaySpinner(!0),this.isCountEnabled=!this.isCountEnabled,this.resetOptions({enableCount:this.isCountEnabled}),!0}changeEnableSelectFlag(){return this.isSelectEnabled=!this.isSelectEnabled,this.resetOptions({enableSelect:this.isSelectEnabled}),!0}changeEnableExpandFlag(){return this.isExpandEnabled=!this.isExpandEnabled,this.resetOptions({enableExpand:this.isExpandEnabled}),!0}setOdataVersion(e){return this.displaySpinner(!0),this.odataVersion=e,this.resetOptions({version:this.odataVersion}),!0}resetOptions(e){this.displaySpinner(!0);const t=this.gridOptions.backendServiceApi.service;t.updateOptions(e),t.clearFilters(),this.aureliaGrid?.filterService.clearFilters()}},t})()}}]);