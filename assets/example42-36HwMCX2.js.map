{"version":3,"file":"example42-36HwMCX2.js","sources":["../../src/examples/slickgrid/example42.$au.ts","../../src/examples/slickgrid/example42.ts"],"sourcesContent":["import { CustomElement } from '@aurelia/runtime-html';\nexport const name = \"example42\";\nexport const template = \"<div class=\\\"container-fluid\\\">\\n  <h2>\\n    Example 42: Custom Pagination\\n    <span class=\\\"float-end\\\">\\n      <a style=\\\"font-size: 18px\\\" target=\\\"_blank\\\"\\n        href=\\\"https://github.com/ghiscoding/aurelia-slickgrid/blob/master/packages/demo/src/examples/slickgrid/example42.ts\\\">\\n        <span class=\\\"mdi mdi-link-variant\\\"></span> code\\n      </a>\\n    </span>\\n    <button\\n      class=\\\"ms-2 btn btn-outline-secondary btn-sm btn-icon\\\"\\n      type=\\\"button\\\"\\n      data-test=\\\"toggle-subtitle\\\"\\n      click.trigger=\\\"toggleSubTitle()\\\"\\n    >\\n      <span class=\\\"mdi mdi-information-outline\\\" title=\\\"Toggle example sub-title details\\\"></span>\\n    </button>\\n  </h2>\\n\\n  <div class=\\\"subtitle\\\">\\n    You can create a Custom Pagination by passing an Aurelia Custom Element and it must <code>implements BasePaginationComponent</code>.\\n    Any of the pagination controls could be moved anywhere on the page (for example we purposely moved the page size away from the rest of the pagination elements).\\n  </div>\\n\\n  <div>\\n    <button class=\\\"btn btn-outline-secondary btn-icon\\\" click.trigger=\\\"togglePaginationPosition()\\\" data-text=\\\"toggle-pagination-btn\\\">\\n      <span class=\\\"mdi mdi-swap-vertical\\\"></span>\\n      <span>Toggle Pagination Position</span>\\n    </button>\\n\\n    <span class=\\\"margin-15px\\\">\\n      Page Size\\n      <input type=\\\"text\\\" class=\\\"input is-small is-narrow\\\" data-test=\\\"page-size-input\\\" value.bind=\\\"pageSize\\\" style=\\\"width: 55px\\\">\\n    </span>\\n  </div>\\n\\n  <aurelia-slickgrid\\n    grid-id=\\\"grid42\\\"\\n    column-definitions.bind=\\\"columnDefinitions\\\"\\n    grid-options.bind=\\\"gridOptions\\\"\\n    dataset.bind=\\\"dataset\\\"\\n    instances.bind=\\\"aureliaGrid\\\"\\n    on-aurelia-grid-created.trigger=\\\"aureliaGridReady($event.detail)\\\">\\n  </aurelia-slickgrid>\\n</div>\\n\";\nexport default template;\nexport const dependencies = [  ];\nexport const bindables = {};\nlet _e;\nexport function register(container) {\n  if (!_e) {\n    _e = CustomElement.define({ name, template, dependencies, bindables });\n  }\n  container.register(_e);\n}\n","import { bindable } from 'aurelia';\nimport {\n  type AureliaGridInstance,\n  type Column,\n  FieldType,\n  Formatters,\n  type GridOption,\n  type MultipleSelectOption,\n  Filters,\n  OperatorType,\n  type Pagination,\n  type SliderRangeOption,\n} from 'aurelia-slickgrid';\n\nimport { CustomPagerComponent } from './example42-pager';\n\nconst NB_ITEMS = 5000;\n\nfunction randomBetween(min: number, max: number): number {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\nexport class Example42 {\n  @bindable() pageSize = 50;\n  columnDefinitions: Column[] = [];\n  gridContainerElm!: HTMLDivElement;\n  gridOptions!: GridOption;\n  dataset: any[] = [];\n  paginationPosition: 'bottom' | 'top' = 'top';\n  aureliaGrid: AureliaGridInstance;\n  hideSubTitle = false;\n  paginationOptions!: Pagination;\n\n  constructor() {\n    this.defineGrid();\n  }\n\n  attached() {\n    this.dataset = this.loadData(NB_ITEMS);\n  }\n\n  aureliaGridReady(aureliaGrid: AureliaGridInstance) {\n    this.aureliaGrid = aureliaGrid;\n  }\n\n  defineGrid() {\n    this.columnDefinitions = [\n      {\n        id: 'title', name: 'Title', field: 'id', minWidth: 100,\n        sortable: true,\n        filterable: true,\n        formatter: (_row, _cell, val) => `Task ${val}`,\n        params: { useFormatterOuputToFilter: true }\n      },\n      {\n        id: 'description', name: 'Description', field: 'description', filterable: true, sortable: true, minWidth: 80,\n        type: FieldType.string,\n      },\n      {\n        id: 'percentComplete', name: '% Complete', field: 'percentComplete', minWidth: 120,\n        sortable: true,\n        customTooltip: { position: 'center' },\n        formatter: Formatters.progressBar,\n        type: FieldType.number,\n        filterable: true,\n        filter: {\n          model: Filters.sliderRange,\n          maxValue: 100, // or you can use the filterOptions as well\n          operator: OperatorType.rangeInclusive, // defaults to inclusive\n          filterOptions: {\n            hideSliderNumbers: false, // you can hide/show the slider numbers on both side\n            min: 0, step: 5\n          } as SliderRangeOption\n        }\n      },\n      {\n        id: 'start', name: 'Start', field: 'start', formatter: Formatters.dateIso, sortable: true, minWidth: 75, width: 100, exportWithFormatter: true,\n        type: FieldType.date, filterable: true, filter: { model: Filters.compoundDate }\n      },\n      {\n        id: 'finish', name: 'Finish', field: 'finish', formatter: Formatters.dateIso, sortable: true, minWidth: 75, width: 120, exportWithFormatter: true,\n        type: FieldType.date,\n        filterable: true,\n        filter: {\n          model: Filters.dateRange,\n        }\n      },\n      {\n        id: 'duration', field: 'duration', name: 'Duration', maxWidth: 90,\n        type: FieldType.number,\n        sortable: true,\n        filterable: true,\n        filter: {\n          model: Filters.input,\n          operator: OperatorType.rangeExclusive // defaults to exclusive\n        }\n      },\n      {\n        id: 'completed', name: 'Completed', field: 'completed', minWidth: 85, maxWidth: 90,\n        formatter: Formatters.checkmarkMaterial,\n        exportWithFormatter: true, // you can set this property in the column definition OR in the grid options, column def has priority over grid options\n        filterable: true,\n        filter: {\n          collection: [{ value: '', label: '' }, { value: true, label: 'True' }, { value: false, label: 'False' }],\n          model: Filters.singleSelect,\n          filterOptions: { autoAdjustDropHeight: true } as MultipleSelectOption\n        }\n      }\n    ];\n\n    this.gridOptions = {\n      autoResize: {\n        container: '#demo-container',\n        bottomPadding: this.paginationPosition === 'top' ? -1 : 38 // use a negative bottom padding since we've prepended custom pagination\n      },\n      enableExcelCopyBuffer: true,\n      enableFiltering: true,\n      customPaginationComponent: CustomPagerComponent, // load our Custom Pagination Component\n      enablePagination: true,\n      pagination: {\n        pageSize: this.pageSize\n      },\n      rowHeight: 40,\n    };\n  }\n\n  loadData(itemCount: number): any[] {\n    // mock a dataset\n    const tempDataset: any[] = [];\n    for (let i = 0, ln = itemCount; i < ln; i++) {\n      const randomDuration = randomBetween(0, 365);\n      const randomYear = randomBetween(new Date().getFullYear(), new Date().getFullYear() + 1);\n      const randomMonth = randomBetween(0, 12);\n      const randomDay = randomBetween(10, 28);\n      const randomPercent = randomBetween(0, 100);\n\n      tempDataset.push({\n        id: i,\n        title: 'Task ' + i,\n        description: (i % 5) ? 'desc ' + i : null, // also add some random to test NULL field\n        duration: randomDuration,\n        percentComplete: randomPercent,\n        percentCompleteNumber: randomPercent,\n        start: (i % 4) ? null : new Date(randomYear, randomMonth, randomDay), // provide a Date format\n        finish: new Date(randomYear, randomMonth, randomDay),\n        completed: (randomPercent === 100) ? true : false,\n      });\n    }\n\n    return tempDataset;\n  }\n\n  pageSizeChanged(pageSize: number) {\n    this.aureliaGrid.paginationService?.changeItemPerPage(pageSize);\n  }\n\n  togglePaginationPosition() {\n    const gridContainerElm = document.querySelector(`#${this.aureliaGrid.slickGrid.getOptions().gridContainerId || ''}`) as HTMLElement;\n    this.paginationPosition = this.paginationPosition === 'top' ? 'bottom' : 'top';\n    (this.aureliaGrid.paginationComponent as CustomPagerComponent)?.disposeElement();\n    (this.aureliaGrid.paginationComponent as CustomPagerComponent)?.renderPagination(gridContainerElm, this.paginationPosition);\n  }\n\n  toggleSubTitle() {\n    this.hideSubTitle = !this.hideSubTitle;\n    const action = this.hideSubTitle ? 'add' : 'remove';\n    document.querySelector('.subtitle')?.classList[action]('hidden');\n    this.aureliaGrid.resizerService.resizeGrid(0);\n  }\n}\n"],"names":["name","template","dependencies","bindables","_e","register","container","CustomElement","_pageSize_dec","_Example42_decorators","_init","NB_ITEMS","randomBetween","min","max","customElement","__au2ViewDef","bindable","Example42","__publicField","__runInitializers","aureliaGrid","_row","_cell","val","FieldType","Formatters","Filters","OperatorType","CustomPagerComponent","itemCount","tempDataset","i","ln","randomDuration","randomYear","randomMonth","randomDay","randomPercent","pageSize","_a","gridContainerElm","_b","action","__decoratorStart","__decorateElement"],"mappings":"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"}