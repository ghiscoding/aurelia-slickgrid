{"version":3,"file":"example29-BbPxaERF.js","sources":["../../src/examples/slickgrid/custom-footer.ts","../../src/examples/slickgrid/example29.$au.ts","../../src/examples/slickgrid/example29.ts"],"sourcesContent":["import { customElement } from 'aurelia';\n\n@customElement({\n  name: 'custom-footer',\n  template: `<button click.trigger=\"clickMe()\">I'm a button from an Aurelia custom element (click me)</button>\n  <div if.bind=\"clickedTimes\">You've clicked me \\${clickedTimes} time(s)</div>`\n})\nexport class CustomFooter {\n  clickedTimes = 0;\n\n  clickMe() {\n    this.clickedTimes++;\n  }\n}\n","import { CustomElement } from '@aurelia/runtime-html';\nimport * as d0 from \"./custom-footer.ts\";\nexport const name = \"example29\";\nexport const template = \"\\n<h2>\\n  ${title}\\n  <span class=\\\"float-end\\\">\\n    <a style=\\\"font-size: 18px\\\"\\n        target=\\\"_blank\\\"\\n        href=\\\"https://github.com/ghiscoding/aurelia-slickgrid/blob/master/packages/demo/src/examples/slickgrid/example29.ts\\\">\\n      <span class=\\\"mdi mdi-link-variant\\\"></span> code\\n    </a>\\n  </span>\\n  <button\\n      class=\\\"ms-2 btn btn-outline-secondary btn-sm btn-icon\\\"\\n      type=\\\"button\\\"\\n      data-test=\\\"toggle-subtitle\\\"\\n      click.trigger=\\\"hideSubTitle = !hideSubTitle\\\"\\n    >\\n      <span class=\\\"mdi mdi-information-outline\\\" title=\\\"Toggle example sub-title details\\\"></span>\\n    </button>\\n</h2>\\n\\n<div class=\\\"subtitle\\\" innerhtml.bind=\\\"subTitle\\\" hidden.bind=\\\"hideSubTitle\\\"></div>\\n\\n\\n<aurelia-slickgrid grid-id=\\\"grid\\\"\\n                    column-definitions.bind=\\\"columnDefinitions\\\"\\n                    grid-options.bind=\\\"gridOptions\\\"\\n                    dataset.bind=\\\"dataset\\\">\\n  <div au-slot=\\\"slickgrid-header\\\" class=\\\"custom-header-slot\\\">\\n    <h3>Grid with header and footer slot</h3>\\n  </div>\\n  <custom-footer class=\\\"custom-footer-slot\\\"\\n                  au-slot=\\\"slickgrid-footer\\\">\\n  </custom-footer>\\n</aurelia-slickgrid>\\n\";\nexport default template;\nexport const dependencies = [ d0 ];\nexport const bindables = {};\nlet _e;\nexport function register(container) {\n  if (!_e) {\n    _e = CustomElement.define({ name, template, dependencies, bindables });\n  }\n  container.register(_e);\n}\n","import { type Column, type GridOption, Formatters } from 'aurelia-slickgrid';\n\nconst NB_ITEMS = 995;\n\nexport class Example29 {\n  title = 'Example 29: Grid with Header and Footer slot';\n  subTitle = `Simple Grids with a custom header and footer via named slots`;\n\n  gridOptions!: GridOption;\n  columnDefinitions: Column[] = [];\n  dataset: any[] = [];\n  hideSubTitle = false;\n\n  constructor() {\n    // define the grid options & columns and then create the grid itself\n    this.defineGrids();\n  }\n\n  attached() {\n    // mock some data (different in each dataset)\n    this.dataset = this.mockData(NB_ITEMS);\n  }\n\n  /* Define grid Options and Columns */\n  defineGrids() {\n    this.columnDefinitions = [\n      { id: 'title', name: 'Title', field: 'title', sortable: true, minWidth: 100 },\n      { id: 'duration', name: 'Duration (days)', field: 'duration', sortable: true, minWidth: 100 },\n      { id: '%', name: '% Complete', field: 'percentComplete', sortable: true, minWidth: 100 },\n      { id: 'start', name: 'Start', field: 'start', formatter: Formatters.dateIso },\n      { id: 'finish', name: 'Finish', field: 'finish', formatter: Formatters.dateIso },\n      { id: 'effort-driven', name: 'Effort Driven', field: 'effortDriven', sortable: true, minWidth: 100 }\n    ];\n    this.gridOptions = {\n      enableAutoResize: false,\n      enableSorting: true,\n      gridHeight: 225,\n      gridWidth: 800,\n    };\n  }\n\n  mockData(count: number) {\n    // mock a dataset\n    const mockDataset: any[] = [];\n    for (let i = 0; i < count; i++) {\n      const randomYear = 2000 + Math.floor(Math.random() * 10);\n      const randomMonth = Math.floor(Math.random() * 11);\n      const randomDay = Math.floor((Math.random() * 29));\n      const randomPercent = Math.round(Math.random() * 100);\n\n      mockDataset[i] = {\n        id: i,\n        title: 'Task ' + i,\n        duration: Math.round(Math.random() * 100) + '',\n        percentComplete: randomPercent,\n        start: new Date(randomYear, randomMonth + 1, randomDay),\n        finish: new Date(randomYear + 1, randomMonth + 1, randomDay),\n        effortDriven: (i % 5 === 0)\n      };\n    }\n\n    return mockDataset;\n  }\n}\n"],"names":["_CustomFooter_decorators","_init","customElement","CustomFooter","__publicField","__decoratorStart","__decorateElement","__runInitializers","name","template","dependencies","d0","bindables","_e","register","container","CustomElement","_Example29_decorators","NB_ITEMS","__au2ViewDef","Example29","Formatters","count","mockDataset","i","randomYear","randomMonth","randomDay","randomPercent"],"mappings":"u9BAAAA,EAAAC,EAEAD,EAAA,CAACE,EAAc,CACb,KAAM,gBACN,SAAU;AAAA,+EAEZ,CAAC,CAAA,EACM,MAAMC,CAAa,CAAnB,aAAA,CACUC,EAAA,KAAA,eAAA,CAAA,CAAA,CAEf,SAAU,CACH,KAAA,cAAA,CAET,CANOH,EAAAI,EAAA,EAAMF,EAANG,qBALPN,EAKaG,CAAA,EAANI,EAAMN,EAAA,EAAAE,CAAA,kICLAK,EAAO,YACPC,EAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAEXC,EAAe,CAAEC,CAAG,EACpBC,EAAY,CAAC,EAC1B,IAAIC,EACG,SAASC,EAASC,EAAW,CAC7BF,IACHA,EAAKG,EAAc,OAAO,CAAE,KAAAR,EAAM,SAAAC,EAAU,aAAAC,EAAc,UAAAE,EAAW,GAEvEG,EAAU,SAASF,CAAE,CACvB,ymCCbAI,EAAAhB,EAEA,MAAMiB,GAAW,IAAID,EAAA,CAAAf,EAAAiB,CAAA,CAAA,EAEd,MAAMC,CAAU,CASrB,aAAc,CARNhB,EAAA,KAAA,QAAA,8CAAA,EACGA,EAAA,KAAA,WAAA,8DAAA,EAEXA,EAAA,KAAA,aAAA,EACAA,EAAA,KAAA,oBAA8B,EAAC,EAC/BA,EAAA,KAAA,UAAiB,EAAC,EACHA,EAAA,KAAA,eAAA,EAAA,EAIb,KAAK,YAAY,CAAA,CAGnB,UAAW,CAEJ,KAAA,QAAU,KAAK,SAASc,EAAQ,CAAA,CAIvC,aAAc,CACZ,KAAK,kBAAoB,CACvB,CAAE,GAAI,QAAS,KAAM,QAAS,MAAO,QAAS,SAAU,GAAM,SAAU,GAAI,EAC5E,CAAE,GAAI,WAAY,KAAM,kBAAmB,MAAO,WAAY,SAAU,GAAM,SAAU,GAAI,EAC5F,CAAE,GAAI,IAAK,KAAM,aAAc,MAAO,kBAAmB,SAAU,GAAM,SAAU,GAAI,EACvF,CAAE,GAAI,QAAS,KAAM,QAAS,MAAO,QAAS,UAAWG,EAAW,OAAQ,EAC5E,CAAE,GAAI,SAAU,KAAM,SAAU,MAAO,SAAU,UAAWA,EAAW,OAAQ,EAC/E,CAAE,GAAI,gBAAiB,KAAM,gBAAiB,MAAO,eAAgB,SAAU,GAAM,SAAU,GAAI,CACrG,EACA,KAAK,YAAc,CACjB,iBAAkB,GAClB,cAAe,GACf,WAAY,IACZ,UAAW,GACb,CAAA,CAGF,SAASC,EAAe,CAEtB,MAAMC,EAAqB,CAAC,EAC5B,QAASC,EAAI,EAAGA,EAAIF,EAAOE,IAAK,CAC9B,MAAMC,EAAa,IAAO,KAAK,MAAM,KAAK,SAAW,EAAE,EACjDC,EAAc,KAAK,MAAM,KAAK,SAAW,EAAE,EAC3CC,EAAY,KAAK,MAAO,KAAK,SAAW,EAAG,EAC3CC,EAAgB,KAAK,MAAM,KAAK,SAAW,GAAG,EAEpDL,EAAYC,CAAC,EAAI,CACf,GAAIA,EACJ,MAAO,QAAUA,EACjB,SAAU,KAAK,MAAM,KAAK,OAAO,EAAI,GAAG,EAAI,GAC5C,gBAAiBI,EACjB,MAAO,IAAI,KAAKH,EAAYC,EAAc,EAAGC,CAAS,EACtD,OAAQ,IAAI,KAAKF,EAAa,EAAGC,EAAc,EAAGC,CAAS,EAC3D,aAAeH,EAAI,IAAM,CAC3B,CAAA,CAGK,OAAAD,CAAA,CAEX,CA3DOtB,EAAAI,GAAA,EAAMe,EAANd,mBAFcW,EAERG,CAAA,EAANb,GAAMN,EAAA,EAAAmB,CAAA"}