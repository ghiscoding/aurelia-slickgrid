"use strict";(self.webpackChunkau_slickgrid_demo=self.webpackChunkau_slickgrid_demo||[]).push([[835],{9297:(e,t,a)=>{a.d(t,{A:()=>r});var i=a(6240),n=a.n(i),l=a(2753),s=a.n(l)()(n());s.push([e.id,"#grid21 .slick-header-column:last-child .slick-header-menu-button,#grid21 .slick-header-column:last-child .slick-resizable-handle,#grid21 .slick-header-column:last-child .slick-sort-indicator,#grid21 .slick-header-column:last-child .slick-sort-indicator-numbered{margin-right:18px}",""]);const r=s},7835:(e,t,a)=>{a.r(t),a.d(t,{Example21:()=>z});var i={};a.r(i),a.d(i,{bindables:()=>h,default:()=>d,dependencies:()=>c,name:()=>r,register:()=>m,template:()=>o});var n=a(2443),l=a(6056),s=a(9297);const r="example21",o='<h2>\n  ${title}\n  <span class="float-end">\n    <a style="font-size: 18px"\n        target="_blank"\n        href="https://github.com/ghiscoding/aurelia-slickgrid/blob/master/packages/demo/src/examples/slickgrid/example21.ts">\n      <span class="mdi mdi-link-variant"></span> code\n    </a>\n  </span>\n</h2>\n<div class="subtitle"\n      innerhtml.bind="subTitle"></div>\n\n<div class="row row-cols-lg-auto g-1 align-items-center">\n  <div class="col">\n    <label for="columnSelect">Single Search:</label>\n  </div>\n  <div class="col">\n    <select class="form-select" class="form-select" data-test="search-column-list" name="selectedColumn"\n            value.bind="selectedColumn" id="columnSelect">\n      <option repeat.for="column of columnDefinitions"\n              model.bind="column">\n        ${column.name}\n      </option>\n    </select>\n  </div>\n  <div class="col">\n    <select value.bind="selectedOperator"\n            class="form-select"\n            data-test="search-operator-list">\n      <option repeat.for="operator of operatorList"\n              model.bind="operator">\n        ${operator}\n      </option>\n    </select>\n  </div>\n\n  <div class="col">\n    <div class="input-group">\n      <input type="text"\n              class="form-control"\n              placeholder="search value"\n              data-test="search-value-input"\n              value.bind="searchValue" />\n      <button class="btn btn-outline-secondary d-flex align-items-center pl-2 pr-2" data-test="clear-search-value"\n              click.trigger="clearGridSearchInput()">\n        <span class="mdi mdi-close"></span>\n      </button>\n    </div>\n  </div>\n</div>\n\n<hr />\n\n<aurelia-slickgrid grid-id="grid21"\n                    column-definitions.bind="columnDefinitions"\n                    grid-options.bind="gridOptions"\n                    dataset.bind="dataset"\n                    instances.bind="aureliaGrid">\n</aurelia-slickgrid>\n',d=o,c=[],h={};let u;function m(e){u||(u=l.K94.define({name:r,template:o,dependencies:c,bindables:h})),e.register(u)}var p=a(6725),f=a(9123),g=a.n(f),b=a(4472),v=a.n(b),k=a(948),w=a.n(k),y=a(9747),C=a.n(y),O=a(7383),S=a.n(O),F=a(8308),G=a.n(F),P={};P.styleTagTransform=G(),P.setAttributes=C(),P.insert=w().bind(null,"head"),P.domAPI=v(),P.insertStyleElement=S(),g()(s.A,P),s.A&&s.A.locals&&s.A.locals,a(3778);let z=(()=>{let e,t,a,s,r,o=[(0,l.EMX)(i)],d=[],c=[],h=[],u=[],m=[],f=[],g=[];return class{static{t=this}static{const i="function"==typeof Symbol&&Symbol.metadata?Object.create(null):void 0;a=[(0,l._tP)()],s=[(0,l._tP)()],r=[(0,l._tP)()],(0,n.G4)(null,null,a,{kind:"field",name:"selectedColumn",static:!1,private:!1,access:{has:e=>"selectedColumn"in e,get:e=>e.selectedColumn,set:(e,t)=>{e.selectedColumn=t}},metadata:i},c,h),(0,n.G4)(null,null,s,{kind:"field",name:"selectedOperator",static:!1,private:!1,access:{has:e=>"selectedOperator"in e,get:e=>e.selectedOperator,set:(e,t)=>{e.selectedOperator=t}},metadata:i},u,m),(0,n.G4)(null,null,r,{kind:"field",name:"searchValue",static:!1,private:!1,access:{has:e=>"searchValue"in e,get:e=>e.searchValue,set:(e,t)=>{e.searchValue=t}},metadata:i},f,g),(0,n.G4)(null,e={value:t},o,{kind:"class",name:t.name,metadata:i},null,d),t=e.value,i&&Object.defineProperty(t,Symbol.metadata,{enumerable:!0,configurable:!0,writable:!0,value:i}),(0,n.zF)(t,d)}selectedColumn=(0,n.zF)(this,c,void 0);selectedOperator=((0,n.zF)(this,h),(0,n.zF)(this,u,void 0));searchValue=((0,n.zF)(this,m),(0,n.zF)(this,f,""));title=((0,n.zF)(this,g),"Example 21: Grid AutoHeight");subTitle='\n  The SlickGrid option "autoHeight" can be used if you wish to keep the full height of the grid without any scrolling\n  <ul>\n    <li>You define a fixed grid width via "gridWidth" in the View</li>\n    <li>You can still use the "autoResize" for the width to be resized automatically (the height will never change in this case)</li>\n    <li>This dataset has 25 rows, if you scroll down the page you can see the entire set is shown without any grid scrolling (though you might have browser scrolling)</li>\n  </ul>\n  ';aureliaGrid;columnDefinitions=[];gridOptions;dataset=[];operatorList=["=","<","<=",">",">=","<>","StartsWith","EndsWith"];constructor(){this.defineGrid()}attached(){this.getData()}defineGrid(){this.columnDefinitions=[{id:"title",name:"Title",field:"title",width:100,sortable:!0,type:p.PUO.string},{id:"duration",name:"Duration (days)",field:"duration",width:100,sortable:!0,type:p.PUO.number},{id:"complete",name:"% Complete",field:"percentComplete",width:100,sortable:!0,formatter:p._tQ.percentCompleteBar,type:p.PUO.number},{id:"start",name:"Start",field:"start",width:100,sortable:!0,formatter:p._tQ.dateIso,type:p.PUO.date},{id:"finish",name:"Finish",field:"finish",width:100,sortable:!0,formatter:p._tQ.dateIso,type:p.PUO.date},{id:"effort-driven",name:"Effort Driven",field:"effortDriven",width:100,sortable:!0,formatter:p._tQ.checkmarkMaterial,type:p.PUO.number}],this.gridOptions={autoHeight:!0,autoResize:{container:"#demo-container",rightPadding:10},enableFiltering:!0,showHeaderRow:!1,alwaysShowVerticalScroll:!1,enableColumnPicker:!0,enableCellNavigation:!0,enableRowSelection:!0}}getData(){const e=[];for(let t=0;t<25;t++){const a=2e3+Math.floor(10*Math.random()),i=Math.floor(11*Math.random()),n=Math.floor(29*Math.random()),l=Math.round(100*Math.random());e[t]={id:t,title:"Task "+t,duration:Math.round(100*Math.random())+"",percentComplete:l,percentCompleteNumber:l,start:new Date(a,i,n),finish:new Date(a,i+1,n),effortDriven:t%5==0}}this.dataset=e}clearGridSearchInput(){this.searchValue="",this.updateFilter()}selectedOperatorChanged(){this.updateFilter()}selectedColumnChanged(){this.updateFilter()}searchValueChanged(){this.updateFilter()}updateFilter(){this.aureliaGrid?.filterService.updateSingleFilter({columnId:`${this.selectedColumn.id||""}`,operator:this.selectedOperator,searchTerms:[this.searchValue||""]})}},t})()}}]);